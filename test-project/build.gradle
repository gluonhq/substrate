plugins {
    id "com.google.osdetector" version "1.6.2" apply false
}

def setupGraalDependencies(String platform) {
    if (platform != "mac" && platform != "linux" && platform != "win") {
        throw new GradleException("Platform $platform not supported")
    }

    if (!hasProperty("skipGraalvmHome")) {
        def gvmHome = System.getenv("GRAALVM_HOME")
        if (gvmHome != null && new File(gvmHome).exists()) {
            return gvmHome
        }
    }

    if (platform != "mac" && platform != "linux") {
        throw new GradleException("Platform $platform not supported")
    }

    def name = "mac" == platform ? "darwin" : "linux"
    def version = "24"
    def graalVM = new File("${System.properties['user.home']}/.gluon/substrate/graalvm")
    def graalFolder = new File("$graalVM/graalvm-svm-${name}-20.1.0-ea+${version}")
    if (!graalFolder.exists()) {
        graalVM.mkdirs()
        def graalZip = new File("$graalVM/graalvm-svm-${name}-20.1.0-ea+${version}.zip")
        println "Downloading graalZip..."
        new URL("https://download2.gluonhq.com/substrate/graalvm/graalvm-svm-${name}-20.1.0-ea+${version}.zip")
                .withInputStream { i -> graalZip.withOutputStream { it << i } }
        copy {
            from zipTree(graalZip)
            into graalVM
        }
        graalZip.delete()
    }
    return "${graalFolder}"
}

def setupJavaFXDependencies(String platform, String target) {
    def version = "15-ea+gvm11"
    def name
    if ("linux" == platform) {
        name = "linux-x86_64"
    } else if ("mac" == platform) {
        if ("ios" == "$target") {
            name = "ios-arm64"
        } else {
            name = "darwin-x86_64"
        }
    } else if ("win" == platform) {
        name = "windows-x86_64"
    } else {
        throw new GradleException("Platform $platform or Target $target not supported")
    }
    def javafxSdk = new File("${System.properties['user.home']}/.gluon/substrate/javafxStaticSdk")
    def javafxFolder = new File("$javafxSdk/$version/$name")
    def nameZip = "openjfx-$version-$name-static.zip"
    def javafxZip = new File("$javafxSdk/$nameZip")
    if (!javafxFolder.exists()) {
        javafxSdk.mkdirs()
        println "Downloading javafxZip..."
        new URL("https://download2.gluonhq.com/substrate/javafxstaticsdk/$nameZip")
                .withInputStream { i -> javafxZip.withOutputStream { it << i } }
        javafxFolder.mkdirs()
        copy {
            from zipTree(javafxZip)
            into javafxFolder
        }
        javafxZip.delete()
    }
    return "$javafxFolder" + "/sdk/lib"
}

subprojects {
    apply plugin: 'com.google.osdetector'
    apply plugin: 'application'

    ext.substrateVersion = "0.0.3"
    def propFile = file("$project.rootDir/../gradle.properties")
    if (propFile.canRead()) {
        def props = new Properties()
        props.load(new FileInputStream(propFile))
        if (props.containsKey('version')) {
            ext.substrateVersion = props['version']
        }
    }
    ext.platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os

    sourceCompatibility = 11
    targetCompatibility = 11
}


